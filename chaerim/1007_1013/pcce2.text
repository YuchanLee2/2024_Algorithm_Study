class Solution {
    public int solution(int[] diffs, int[] times, long limit) {
        int answer = 0;
        int left = 1;
        int right = 100000;
        
        while(left <= right){
            int level = (left+right)/2;
            long totalTime = getTime(diffs, times, level);
            
            if(totalTime<=limit){
                answer = level;
                right = level-1;
            } else{
                left = level+1;
            }
        }     
        
        return answer;
       
    }
    private long getTime(int[] diffs, int[] times, int level){
        long sum = 0;
        
        for (int i=0; i<diffs.length; i++){
            int solve = diffs[i] - level;
            
            if(solve <= 0){
                sum += times[i];
                continue;           
            }       
            if(i==0){
                sum += (long) solve * times[i] + times[i];
            }
            else {
                sum += (long) solve * (times[i] + times[i-1]) + times[i];
            }
        }
        return sum;
    }
}